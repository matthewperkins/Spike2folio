var istart, iend, stime, stepe, wpos, currampl, viewtemp%, isokay%, gotonext%, icmndoffset,icmndslope;
var peakampl, icmndupthrsh, icmnddwnthrsh, icmndchanno, countspkchanno, spkchanthresh, b4rmp, b4rmppre, b4rmppost;
var spkcount, b8rmp, b8chan, b8memchan;

gotonext% := 1;
icmndoffset := 0.000005;     'should be close to this value
icmndslope :=  0.00928907571;  '
stepe := 0.0002;

b4rmppre := 1.5; 'time before current pulse that starts rmp average
b4rmppost := 0.5; 'time before current pulse that stops rmp average 

viewtemp% := View(0);  'Save the current view
View(viewtemp%);         'restore the original view
DrawAll();
FrontView(viewtemp%);


icmndupthrsh := Input("command current up thresh?|", 0.05); '0.05;
icmnddwnthrsh := Input("command current down thresh?|", 0.01); '0.01;
icmndchanno := Input("command current on which cannel?|", 7); '7;
countspkchanno := Input("Count Spikes on which cannel?|", 4);
b8chan:= Input("What channel is b8?|", 5);

b8memchan := MemChan(0,b8chan);
MemImport(b8memchan, b8chan, 0.0, MaxTime());
ChanProcessAdd((b8memchan),1,20);
'MemImport(MemChan(0, 5), 5, 0.0, MaxTime()); 'Create channel copy
'ChanProcessAdd(401,1); 'Add Smooth to channel 401
'ChanProcessArg(401,1,1,20); 'Set Smooth Time constant (s)


spkchanthresh := -0.025;'-0.025 seems to work well

PrintLog("start\t");
PrintLog("currentamlitude\t");
PrintLog("b4/5 RMP\t");
PrintLog("spikes\t");
PrintLog("b8 rmp\n");
                        
while (gotonext%) do
    CursorDelete(1);
    CursorDelete(2);

    CursorActive(0, 7, icmndchanno, 0.1, "", "", icmndupthrsh);
    CursorSearch(0);
    istart := Cursor(0);

    CursorNew(istart,1);
    CursorActive(1, 8, icmndchanno, "Cursor(0)+0.02", "Cursor(0)+8", "Cursor(0)",  icmnddwnthrsh);
    CursorSearch(1,1);
    iend := Cursor(1);

    XRange(Cursor(0)-35,Cursor(0)+35);
'    View(viewtemp%);         'restore the original view
'    DrawAll();
'    FrontView(viewtemp%);

    isokay% := Input("okay?|", 1);

    if isokay% then
        b4rmp := ChanMeasure(countspkchanno,2,istart - b4rmppre,istart - b4rmppost);
        b8rmp := ChanMeasure(b8memchan, 2, istart - 20, istart - 10);
        PrintLog("%.4f\t",istart);

        currampl := ChanMeasure(icmndchanno,2,Cursor(0),Cursor(1)); '{which chan}, {2 - measure mean}, {Cursor 1 - start}, {Cur2-end},
        currampl := (currampl - icmndoffset)/icmndslope; 'note constants come from calibration performed on March 8th 2010, MP from I2 10mV/nA out on axclamp.
        PrintLog("%.4f\t",currampl);
        PrintLog("%0.2f\t",b4rmp*1000);
        
        CursorNew(istart,2);
        CursorActive(2, 4, countspkchanno, "Cursor(2)", "Cursor(1)", "", spkchanthresh);
        
        spkcount := 0;
        while Cursor(2)<iend do
            CursorSearch(2,2);
            If CursorValid(2) then    
                spkcount := spkcount + 1;
                stime := Cursor(2);
                wpos := stime + stepe;
                Cursor(2,wpos);
            Else  
                break
            endif
        wend;
        PrintLog("%3d\t",spkcount);
        PrintLog("%0.2f\n",b8rmp*1000);
    endif;
    gotonext% := Input("next?|", 1);
    if gotonext% then
            Cursor(0,Cursor(0)+1)
    endif
wend;    
